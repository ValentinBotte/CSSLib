/**
*   VARIABLES ENVIRONNEMENT
*/
$colors: #ffffff,#000000,#0b2374,#6b81c2,#3e425a,#d5003a #ef4b4b,#e4e7ef,#b9bed1,#f0f2f7,#e3e8f0,#dde2ef,#f7f8fa,#a1a6bb,#e1e3e7,#14162d,#3a405b,#f7f8fa,#4be1ab,#acc1f8,#e6e9f1,#f7f8fa,#343e5c;
$fonts: 'Montserrat';
$prefix-responsive: '', 'sm-', 'ty-', 'xs-', 'md-', 'lg-';
$limit-responsive: '10000px', '576px', '768px', '991px', '1080px', '1280px';
// Ne pas supprimer la premiere valeur responsive

$col: 24;
$occurence: 100;
$pas-layout: 5;



/*
    lg: 1280px
    md: 1080px
    xs: 991px
    ty: 768px
    sm: 576px
*/


/***************************************************/
/*************** MIXIN NO-RESPONSIVE ***************/
/***************************************************/

@mixin col-x($prefix) {
    @for $e from 1 through $col {
        .#{$prefix}col-#{$e} {
            display: -ms-flexbox;
            display: flex;
            -ms-flex-wrap: wrap;
            flex-wrap: wrap;
            -ms-flex: 0 0 $e * 100%/ $col;
            flex: 0 0 $e * 100%/ $col;
            max-width: $e * 100% / $col;
        } 
    }
}

@mixin margin-x($prefix) {
    $i: 0;
    
    @while $i <= $occurence {
        @if($i != 0){
            .#{$prefix}m-#{$i} {
                margin: $i + 0px;
            }
            .#{$prefix}mt-#{$i} {
                margin-top: $i + 0px;
            }
            .#{$prefix}mb-#{$i} {
                margin-bottom: $i + 0px;
            }
            .#{$prefix}mr-#{$i} {
                margin-right: $i + 0px;
            }
            .#{$prefix}ml-#{$i} {
                margin-left: $i + 0px;
            }

            .#{$prefix}m-#{$i}-force {
                margin: $i + 0px !important;
            }
            .#{$prefix}mt-#{$i}-force {
                margin-top: $i + 0px !important;
            }
            .#{$prefix}mb-#{$i}-force {
                margin-bottom: $i + 0px !important;
            }
            .#{$prefix}mr-#{$i}-force {
                margin-right: $i + 0px !important;
            }
            .#{$prefix}ml-#{$i}-force {
                margin-left: $i + 0px !important;
            }
        }
      
        $i: $i + 5;
    }

    .#{$prefix}ml-auto{margin-left: auto;}
    .#{$prefix}mr-auto{margin-right: auto;}
    .#{$prefix}m-auto{margin: auto;}

    .#{$prefix}m-0-force{margin: 0px!important;}
    .#{$prefix}m-0{margin: 0px;}
    .#{$prefix}mr-0{margin-right: 0px;}
    .#{$prefix}ml-0{margin-left: 0px;}
    .#{$prefix}mt-0{margin-top: 0px;}
    .#{$prefix}mb-0{margin-bottom: 0px;}
}
  
@mixin padding-x($prefix) {
    $i: 0;
    
    @while $i <= $occurence {
        @if($i != 0){
            .#{$prefix}p-#{$i} {
                padding: $i + 0px;
            }
            .#{$prefix}pt-#{$i} {
                padding-top: $i + 0px;
            }
            .#{$prefix}pb-#{$i} {
                padding-bottom: $i + 0px;
            }
            .#{$prefix}pr-#{$i} {
                padding-right: $i + 0px;
            }
            .#{$prefix}pl-#{$i} {
                padding-left: $i + 0px;
            }

            .#{$prefix}p-#{$i}-force {
                padding: $i + 0px !important;
            }
            .#{$prefix}pt-#{$i}-force {
                padding-top: $i + 0px !important;
            }
            .#{$prefix}pb-#{$i}-force {
                padding-bottom: $i + 0px !important;
            }
            .#{$prefix}pr-#{$i}-force {
                padding-right: $i + 0px !important;
            }
            .#{$prefix}pl-#{$i}-force {
                padding-left: $i + 0px !important;
            }
        }
      
        $i: $i + 5;
    }

    .#{$prefix}pl-auto{padding-left: auto;}
    .#{$prefix}pr-auto{padding-right: auto;}
    .#{$prefix}p-auto{padding: auto;}

    .#{$prefix}p-0-force{padding: 0px!important;}
    .#{$prefix}p-0{padding: 0px;}
    .#{$prefix}pr-0{padding-right: 0px;}
    .#{$prefix}pl-0{padding-left: 0px;}
    .#{$prefix}pt-0{padding-top: 0px;}
    .#{$prefix}pb-0{padding-bottom: 0px;}

}

@mixin width-x($prefix) {
    $i: 0;
    $e: 0;

    @while $i <= 1000 {
        @if($i != 0){
            .#{$prefix}w-#{$i}px {
                width: $i + 0px;
            }
            .#{$prefix}max-w-#{$i}px {
                max-width: $i + 0px;
            }
            .#{$prefix}min-w-#{$i}px {
                min-width: $i + 0px;
            }
        }
      
        $i: $i + 10;
    }

    @while $e <= 100 {
        @if($e != 0){
            .#{$prefix}w-#{$e}p {
                width: $e + 0%;
            }
           
        }
      
        $e: $e + 5;
    }

    .#{$prefix}w-33p{width: 33%;}
    .#{$prefix}w-auto{width: auto;}

}

@mixin height-x($prefix) {
    $i: 0;
    $e: 0;

    @while $i <= 1000 {
        @if($i != 0){
            .#{$prefix}h-#{$i}px {
                height: $i + 0px;
            }
            .#{$prefix}max-h-#{$i}px {
                max-height: $i + 0px;
            }
            .#{$prefix}min-h-#{$i}px {
                min-height: $i + 0px;
            }
        }
      
        $i: $i + 10;
    }

    @while $e <= 100 {
        @if($e != 0){
            .#{$prefix}h-#{$e}p {
                height: $e + 0%;
            } 
        }
      
        $e: $e + 5;
    }

    .#{$prefix}h-auto {
        height: auto;
    }

}

@mixin position-x($prefix) {
    $i: 0;
    
    @while $i <= $occurence {
        @if($i != 0){
            .#{$prefix}top-#{$i} {
                top: $i + 0px;
            }
            .#{$prefix}left-#{$i} {
                left: $i + 0px;
            }
            .#{$prefix}right-#{$i} {
                right: $i + 0px;
            }
            .#{$prefix}bottom-#{$i} {
                bottom: $i + 0px;
            }
        }
      
        $i: $i + 5;
    }

    .#{$prefix}p-static {position: static;}
    .#{$prefix}p-static-force {position: static!important;}
    .#{$prefix}p-fixed {position: fixed;}
    .#{$prefix}p-fixed-force {position: fixed!important;}
    .#{$prefix}p-absolute {position: absolute;}
    .#{$prefix}p-absolute-force {position: absolute!important;}
    .#{$prefix}p-relative {position: relative;}
    .#{$prefix}p-relative-force {position: relative!important;}
    .#{$prefix}p-sticky {position: sticky;}
    .#{$prefix}p-sticky-force {position: sticky!important;}

    .#{$prefix}top-50p {top: 50%;}
    .#{$prefix}left-50p {left: 50%;}
    .#{$prefix}right-50p {right: 50%;}
    .#{$prefix}bottom-50p {bottom: 50%;}

    .#{$prefix}translate-xy{transform: translate(-50%, -50%);}
    .#{$prefix}translate-x{transform: translateX(-50%);}
    .#{$prefix}translate-y{transform: translateY(-50%);}

    .#{$prefix}top-0 {top: 0px;}
    .#{$prefix}left-0 {left: 0px;}
    .#{$prefix}right-0 {right: 0px;}
    .#{$prefix}bottom-0 {bottom: 0px;}

}

@mixin display($prefix) {
    .#{$prefix}d-block {display: block;}
    .#{$prefix}d-block-force {display: block!important;}
    .#{$prefix}d-inline-block {display: inline-block;}
    .#{$prefix}d-inline-block-force {display: inline-block!important;}
    .#{$prefix}d-inline {display: inline;}
    .#{$prefix}d-inline-force {display: inline!important;}
    .#{$prefix}d-flex {display: flex;}
    .#{$prefix}d-flex-force {display: flex!important;}
    .#{$prefix}d-inline-flex {display: inline-flex;}
    .#{$prefix}d-inline-flex-force {display: inline-flex!important;}
    .#{$prefix}d-table {display: table;}
    .#{$prefix}d-table-row {display: table-row;}
    .#{$prefix}d-table-cell {display: table-cell;}
    .#{$prefix}d-hidden {display: none;}
    .#{$prefix}d-hidden-force {display: none!important;}
}

@mixin z-x($prefix) {
    $i: 0;
    
    @while $i <= $occurence {
        @if($i != 0){
            .#{$prefix}z-#{$i} {
                z-index: $i + 0px;
            }
        }
      
        $i: $i + 5;
    }

    .#{$prefix}z--1 {z-index: -1;}
    .#{$prefix}z-0 {z-index: 0;}
    .#{$prefix}z-1-force {z-index: 1!important;}

}

@mixin overflow($prefix) {
    .#{$prefix}overflow-hidden {overflow: hidden;}
    .#{$prefix}overflow-auto {overflow: auto;}
    .#{$prefix}overflow-visible {overflow: visible;}
    .#{$prefix}overflow-hidden-force {overflow: hidden!important;}
    .#{$prefix}overflow-auto-force {overflow: auto!important;}
    .#{$prefix}overflow-visible-force  {overflow: visible!important;}
}

@mixin fs-x($prefix) {
    $i: 0;
    
    @while $i <= $occurence {
        @if($i != 0){
            .#{$prefix}fs-#{$i} {
                font-size: $i + 0px;
            }
        }
      
        $i: $i + 2;
    }

}

@mixin fw-x($prefix) {
    $i: 0;
    
    @while $i <= 900 {
        @if($i != 0){
            .#{$prefix}fw-#{$i} {
                font-weight: $i + 0px;
            }
        }
      
        $i: $i + 100;
    }

}

@mixin text($prefix) {
    .#{$prefix}text-left{text-align: left;}
    .#{$prefix}text-center{text-align: center;}
    .#{$prefix}text-right{text-align: right;}
    .#{$prefix}text-uppercase{text-transform: uppercase;}
    .#{$prefix}text-ellipsis{text-overflow: ellipsis;}
    .#{$prefix}text-left-force{text-align: left!important;}
    .#{$prefix}text-center-force{text-align: center!important;}
    .#{$prefix}text-right-force{text-align: right!important;}
    .#{$prefix}text-uppercase-force{text-transform: uppercase!important;}
    .#{$prefix}text-ellipsis-force{text-overflow: ellipsis!important;}
    .#{$prefix}upper-firstletter::first-letter{text-transform: uppercase;}
}

@mixin x-color-x($prefix) {
    
    @each $color in $colors {
        .#{$prefix}t-color-#{str-slice(""+$color, 2)} {
            color: $color;
        }

        .#{$prefix}b-color-#{str-slice(""+$color, 2)} {
            background-color: $color;
        }
    }

}

@mixin ff-x($prefix) {
    
    @each $font in $fonts {
        .#{$prefix}ff-#{$font} {
            font-family: $font;
        }
        .#{$prefix}ff-#{$font}-force {
            font-family: $font !important;
        }
    }

}

@mixin hover-x-x($prefix) {
    
    @each $color in $colors {
        .#{$prefix}hover-t-#{str-slice(""+$color, 2)}:hover {
            color: $color;
        }

        .#{$prefix}hover-b-#{str-slice(""+$color, 2)}:hover {
            background-color: $color;
        }
    }

    .#{$prefix}hover-opacity:hover{opacity: 0.5;}

}

@mixin bx-solid-xpx-x($prefix) {
    
    @each $color in $colors {

        $i: 0;
    
        @while $i <= 10 {
            @if($i != 0){
                .#{$prefix}b-solid-#{$i}px-#{str-slice(""+$color, 2)} {
                    border: #{$i}px solid $color;
                }

                .#{$prefix}br-solid-#{$i}px-#{str-slice(""+$color, 2)} {
                    border-right: #{$i}px solid $color;
                }
                .#{$prefix}bl-solid-#{$i}px-#{str-slice(""+$color, 2)} {
                    border-left: #{$i}px solid $color;
                }
                .#{$prefix}bb-solid-#{$i}px-#{str-slice(""+$color, 2)} {
                    border-bottom: #{$i}px solid $color;
                }
                .#{$prefix}bt-solid-#{$i}px-#{str-slice(""+$color, 2)} {
                    border-top: #{$i}px solid $color;
                }
            }
          
            $i: $i + 1;
        }

    }

}

@mixin opacity-x($prefix) {
    $i: 0;
    
    @while $i < 1 {
        @if($i != 0){
            .#{$prefix}opacity-0#{str-slice(""+$i, 3)} {
                opacity: $i;
            }
        }
      
        $i: $i + 0.1;
    }

    .#{$prefix}opacity-0{opacity: 0;}
    .#{$prefix}opacity-1{opacity: 1;}
    .#{$prefix}opacity-1-force{opacity: 1!important;}

}

@mixin ls($prefix) {
    .#{$prefix}ls-1-1{letter-spacing: 1.1px;}
    .#{$prefix}ls-1-2{letter-spacing: 1.2px;}
    .#{$prefix}ls-1-4{letter-spacing: 1.4px;}
    .#{$prefix}ls-1-5{letter-spacing: 1.5px;}
    .#{$prefix}ls-1-6{letter-spacing: 1.6px;}
}

@mixin br($prefix) {
    .#{$prefix}br-100p{border-radius: 100%;}
    .#{$prefix}br-50{border-radius: 50px;}
    .#{$prefix}br-25{border-radius: 25px;}
    .#{$prefix}br-20{border-radius: 20px;}
    .#{$prefix}br-15{border-radius: 15px;}
    .#{$prefix}br-5{border-radius: 5px;}
    .#{$prefix}br-3{border-radius: 3px;}
    .#{$prefix}br-0{border:none;}
    .#{$prefix}br-0-force{border:none!important;}
}


@mixin other($prefix) {
    .#{$prefix}visible {visibility: visible;}
    .#{$prefix}invisible {visibility: hidden;}
    .#{$prefix}visible-force {visibility: visible!important;}
    .#{$prefix}invisible-force {visibility: hidden!important;}
    .#{$prefix}object-contain {object-fit: contain};
    .#{$prefix}object-cover {object-fit: cover};
    .#{$prefix}object-contain-force {object-fit: contain!important};
    .#{$prefix}object-cover-force {object-fit: cover!important};
    .#{$prefix}no-outline{outline: none;}
    .#{$prefix}c-default{cursor: default;}
    .#{$prefix}c-default-force{cursor: default!important;}
    .#{$prefix}c-pointer{cursor: pointer;}
    .#{$prefix}c-zoomIn{cursor: zoom-in;}
    .#{$prefix}nowrap{white-space: nowrap;}
    .#{$prefix}pre-wrap{white-space: pre-wrap;}
    .#{$prefix}pre-line{white-space: pre-line;}
    .#{$prefix}space-normal{white-space: normal;}
    .#{$prefix}f-right{float: right;}
    .#{$prefix}f-left{float: left;}
    .#{$prefix}f-none {float: none;}
    .#{$prefix}transition-300ms{transition: all 300ms ease;}
    .#{$prefix}transition-500ms{transition: all 500ms ease;}
    .#{$prefix}transition-1000ms{transition: all 1000ms ease;}
    .#{$prefix}box-shadow{box-shadow: 0 2px 20px 0 rgba(0, 0, 0, 0.15);}

}

@mixin flex($prefix) {
    .#{$prefix}f-row{flex-direction: row;}
    .#{$prefix}f-column{flex-direction: column;}
    .#{$prefix}f-column-reverse{flex-direction: column-reverse;}
    .#{$prefix}f-wrap{flex-wrap: wrap;}
    .#{$prefix}f-nowrap{flex-wrap: nowrap;}
    .#{$prefix}f-justify-content-between{justify-content: space-between;}
    .#{$prefix}f-justify-content-center{justify-content: center;}
    .#{$prefix}f-justify-content-end{justify-content: flex-end;}
    .#{$prefix}f-align-items-start{align-items: flex-start;}
    .#{$prefix}f-align-items-center{align-items: center;}
    .#{$prefix}f-align-items-baseline{align-items: baseline;}
    .#{$prefix}f-align-items-end{align-items: flex-end;}
}

@mixin generate(){

    $i: 1;

    @while $i <= length($prefix-responsive) {
        
            @media(max-width: nth($limit-responsive, $i)){
                @include col-x(nth($prefix-responsive, $i));
                @include margin-x(nth($prefix-responsive, $i));
                @include padding-x(nth($prefix-responsive, $i));
                @include position-x(nth($prefix-responsive, $i));
                @include display(nth($prefix-responsive, $i));
                @include width-x(nth($prefix-responsive, $i));
                @include height-x(nth($prefix-responsive, $i));
                @include z-x(nth($prefix-responsive, $i));
                @include overflow(nth($prefix-responsive, $i));
                @include fs-x(nth($prefix-responsive, $i));
                @include fw-x(nth($prefix-responsive, $i));
                @include text(nth($prefix-responsive, $i));
                @include x-color-x(nth($prefix-responsive, $i));
                @include ff-x(nth($prefix-responsive, $i));
                @include other(nth($prefix-responsive, $i));
                @include ls(nth($prefix-responsive, $i));
                @include hover-x-x(nth($prefix-responsive, $i));
                @include flex(nth($prefix-responsive, $i));
                @include br(nth($prefix-responsive, $i));
                @include bx-solid-xpx-x(nth($prefix-responsive, $i));
                @include opacity-x(nth($prefix-responsive, $i));
            }
      
        $i: $i + 1;
    }

}

// GENERATION //
@include generate();


/***************************************************/
/*********************** GRID **********************/
/***************************************************/

.container-fluid{
    width: 100%;
    margin-right: auto;
    margin-left: auto;
}

.container{
    width: 100%;
    margin-right: auto;
    margin-left: auto;
}

@media (min-width: 576px) {
.container {
    max-width: 540px;
}
}

@media (min-width: 768px) {
.container {
    max-width: 720px;
}
}

@media (min-width: 992px) {
.container {
    max-width: 960px;
}
}

@media (min-width: 1200px) {
.container {
    max-width: 1140px;
}
}

.row {
display: flex;
flex-wrap: wrap;
}
